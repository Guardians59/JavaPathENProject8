buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.7.0")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"


bootJar {
    baseName = 'tourGuide'
    version =  '1.0.0'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

sourceCompatibility = '11'
targetCompatibility = 11

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.3")
}

dependencies {
    
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.2'
    implementation group: 'org.javamoney', name: 'moneta', version: '1.3'
    implementation group: 'javax.money', name: 'money-api', version: '1.1'
    implementation group: 'com.jsoniter', name: 'jsoniter', version: '0.9.23'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'org.zalando', name: 'jackson-datatype-money', version: '1.3.0'
    
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock', version: '2.27.2'
    
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
    dependsOn test
    afterEvaluate {

classDirectories.setFrom(files(classDirectories.files.collect {
		fileTree(dir: it,
    exclude: [
    	"**/*tourGuide/config/**",
    	"**/*tourGuide/helper/**",
    	"**/*tourGuide/model/**",
    	"**/*tourGuide/proxies/**",
    	"**/*tourGuide/tracker/**"
    		])
    	}))
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.5
      }
    }
  }
}
